@page "/shipdetails/{symbol}"
@using SpaceTrader.Components.Ships
@using SpaceTrader.Components.Ships.Nav
@inject ApiClient _client
@if(_ship == null)
{
    if(string.IsNullOrWhiteSpace(Error))
    {
        <p>Loading Ship Details . . .</p>
    }
    else
    {
        <p style="color:red">@Error</p>
    }
}
else
{
    <h3>@_ship.Symbol</h3>
    <div>
        <div id="accordion">
            <div class="card">
                <div class="card-header" id="registrationheader">
                    <h5 class="mb-0">
                        <button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#registration" aria-expanded="true" aria-controls="registration">
                            Registration
                        </button>
                    </h5>
                </div>
                <div id="registration" class="collapse multi-collapse" aria-labelledby="registrationheader" data-parent="#accordion">
                    <div class="card-body">
                        <RegistrationView Registration=_ship.Registration />
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header" id="navigationheader">
                    <h5 class="mb-0">
                        <button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                            Navigation
                        </button>
                    </h5>
                </div>
                <div id="collapseTwo" class="collapse multi-collapse" aria-labelledby="navigationheader" data-parent="#accordion">
                    <div class="card-body">
                        <NavView Nav=_ship.Nav />
                        <FuelView Fuel=_ship.Fuel />
                    </div>
                </div>
            </div>
        </div>
            <CrewView Crew=_ship.Crew />
            <ShipFrameView Frame=_ship.Frame />
            <ReactorView Reactor=_ship.Reactor />
            <EngineView Engine=_ship.Engine />
        </div>
        @if (_ship.Modules is not null)
        {
            <div class="collapse" id="modules">
                @foreach (var module in _ship.Modules)
                {
                    <ModuleView Module=module />
                }
            </div>
        }
        @if(_ship.Mounts is not null)
        {
            <div class="collapse" id="mounts">
                @foreach (var mount in _ship.Mounts)
                {
                    <MountView Mount=mount />
                }
            </div>
        }
    
        <div>
            <CargoView Cargo=_ship.Cargo />
        </div>

}

@code {
    [Parameter] public string Symbol { get; set; }

    private Ship _ship;
    private string Error = string.Empty;

    protected override async Task OnInitializedAsync ()
    {
        var request = new RestRequest($"/my/ships/{Symbol}", Method.Get);
        var response = await _client.GetRequest<Ship>(request, true);

        if(response is not null)
        {
            _ship = response.Data;
        }
        else
        {
            Error = "Unable to retrieve ship, please make sure you are logged in";
        }
    }
}
