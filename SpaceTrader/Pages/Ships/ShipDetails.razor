@page "/shipdetails/{symbol}"
@using SpaceTrader.Components.Ships
@using SpaceTrader.Components.Ships.Nav
@inject ApiClient _client
@inject ShipDbController _shipDatabase
@inject NavigationManager _navManager

@if(!string.IsNullOrWhiteSpace(Error))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error: </strong>@Error
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>   
}
@if(_ship == null)
{
    <p>Loading Ship Details . . .</p>
}
else
{
    <h3><RegistrationView Registration=_ship.Registration /></h3>
    <div class="accordion accordion-flush" id="topAccordion">

        <div class="accordion-item">
            <h2 class="accordion-header" id="navigationHeader">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#nav" aria-expanded="false" aria-controls="nav">
                    Navigation
                </button>
            </h2>
        </div>
        <div id="nav" class="accordion-collapse collapse" aria-labelledby="navigationHeader" data-parent="#topAccordion">
            <div class="accordion-body">
                <NavView Nav=_ship.Nav Symbol="@_ship.Symbol" StateChanged="@(nav => _ship = _ship with {Nav = nav})"/>
                <FuelView Fuel=_ship.Fuel ShipSymbol="@_ship.Symbol"/>
                @if(_ship.Nav.Status is "IN_ORBIT")
                {
                    <button type="button" class="btn btn-primary" @onclick="@ToDestinationSelect">Select Waypoint Destination</button>
                }
            </div>
        </div>

        <div class="accordion-item">
            <h2 class="accordion-header" id="configHeader">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#config" aria-expanded="false" aria-controls="config">
                    Ship Configuration
                </button>
            </h2>
        </div>
        <div id="config" class="accordion-collapse collapse" aria-labelledby="configHeader" data-parent="#topAccordion">
            <div class="accordion-body">

                <div class="accordion accordion-flush" id="configAccordion">

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="crewHeader">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#crew" aria-expanded="false" aria-controls="crew">
                                Crew
                            </button>
                        </h2>
                    </div>
                    <div id="crew" class="accordion-collapse collapse" aria-labelledby="crewHeader" data-parent="#configAccordion">
                        <div class="accordion-body">
                            <CrewView Crew=_ship.Crew />
                        </div>
                    </div>

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="frameHeader">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#frame" aria-expanded="false" aria-controls="frame">
                                Frame
                            </button>
                        </h2>
                    </div>
                    <div id="frame" class="accordion-collapse collapse" aria-labelledby="frameHeader" data-parent="#configAccordion">
                        <div class="accordion-body">
                            <ShipFrameView Frame=_ship.Frame />
                        </div>
                    </div>

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="reactorHeader">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#reactor" aria-expanded="false" aria-controls="reactor">
                                Reactor
                            </button>
                        </h2>
                    </div>
                    <div id="reactor" class="accordion-collapse collapse" aria-labelledby="reactorHeader" data-parent="#configAccordion">
                        <div class="accordion-body">
                            <ReactorView Reactor=_ship.Reactor />
                        </div>
                    </div>

                    <div class="accordion-item">
                        <h2 class="accordion-header" id="engineHeader">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#engine" aria-expanded="false" aria-controls="engine">
                                Engine
                            </button>
                        </h2>
                    </div>
                    <div id="engine" class="accordion-collapse collapse" aria-labelledby="engineHeader" data-parent="#configAccordion">
                        <div class="accordion-body">
                            <EngineView Engine=_ship.Engine />
                        </div>
                    </div>
                </div>
            </div>
        </div>
            
        @if (_ship.Modules is not null)
        {
            <div class="accordion" id="modulesAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="modulesHeader">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#modules" aria-expanded="false" aria-controls="modules">
                            Modules
                        </button>
                    </h2>
                </div>
                <div id="modules" class="accordion-collapse collapse" aria-labelledby="modulesHeader" data-parent="#topAccordion">
                    <div class="accordion-body">
                        @{var count = 0;}
                        @foreach (var module in _ship.Modules)
                        {
                            <div class="accordion" id="moduleAccordion">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="moduleHeader">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#module@(count)" aria-expanded="false" aria-controls="module@(count)">
                                            @module.Name
                                        </button>
                                    </h2>
                                </div>
                                <div id="module@(count)" class="accordion-collapse collapse" aria-labelledby="moduleHeader" data-parent="#modulesAccordion">
                                    <div class="accordion-body">
                                        <ModuleView Module=module />
                                    </div>
                                </div>
                            </div>
                            count++;
                        }
                    </div>
                </div>
            </div>
        }
        @if(_ship.Mounts is not null)
        {
            <div class="accordion" id="mountsAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="mountsHeader">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#mounts" aria-expanded="false" aria-controls="mounts">
                            Mounts
                        </button>
                    </h2>
                </div>
                <div id="mounts" class="accordion-collapse collapse" aria-labelledby="mountsHeader" data-parent="#topAccordion">
                    <div class="accordion-body">
                        @{var count = 0;}
                        @foreach (var mount in _ship.Mounts)
                        {
                            <div class="accordion" id="moduleAccordion">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="mountHeader">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#mount@(count)" aria-expanded="false" aria-controls="mount@(count)">
                                            @mount.Name
                                        </button>
                                    </h2>
                                </div>
                                <div id="mount@(count)" class="accordion-collapse collapse" aria-labelledby="mountHeader" data-parent="#mountsAccordion">
                                    <div class="accordion-body">
                                        <MountView Mount=mount />
                                    </div>
                                </div>
                            </div>
                            count++;
                        }
                    </div>
                </div>
            </div>
        }

        <div class="accordion" id="cargoAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header" id="cargoHeader">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#cargo" aria-expanded="false" aria-controls="cargo">
                        Cargo
                    </button>
                </h2>
            </div>
            <div id="cargo" class="accordion-collapse collapse" aria-labelledby="cargoHeader" data-parent="#topAccordion">
                <div class="accordion-body">
                    <CargoView Cargo=_ship.Cargo />
                </div>
            </div>
        </div>
    </div>
}



@code {
    [Parameter] public string Symbol { get; set; }

    private Ship _ship;
    private string Error = string.Empty;

    protected override async Task OnInitializedAsync ()
    {
        var request = new RestRequest($"/my/ships/{Symbol}", Method.Get);
        var response = await _client.GetRequest<Ship>(request, true);

        if(response is not null)
        {
            _ship = response.Data;
            await _shipDatabase.Insert(_client.LoggedInAgent.AccountID, _ship);
        }
        else
        {
            Error = "Unable to retrieve ship, please make sure you are logged in";
        }
    }

    private void ToDestinationSelect()
    {
        _navManager.NavigateTo($"shipdetails/{Symbol}/navigation/{_ship.Nav.SystemSymbol}");
    }
}
