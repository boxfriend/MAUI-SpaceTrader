@implements IDisposable
@inject ApiClient client
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">@client.DisplayName</a>
        
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="text-light" style="text-align:center">
            <div>$@(agent is not null ? agent.Credits : "???")</div>
            <div>HQ: @(agent?.Headquarters ?? "???")</div>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if(agent is not null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="allsystems">
                    <span class="oi oi-plus" aria-hidden="true"></span> All Systems
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="shipslist">
                    <span class="oi oi-plus" aria-hidden="true"></span> My Ships
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="contracts">
                    <span class="oi oi-plus" aria-hidden="true"></span> Contracts
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private AgentData agent = null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override Task OnInitializedAsync ()
    {
        client.LoggedInAgentCompleted += UpdateAgent;
        return base.OnInitializedAsync();
    }

    private void UpdateAgent (AgentData agent)
    {
        this.agent = agent;
        StateHasChanged();
    }

    public void Dispose()
    {
        if(client is not null)
            client.LoggedInAgentCompleted -= UpdateAgent;
    }
}
